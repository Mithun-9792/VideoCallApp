{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/palmi/OneDrive/Desktop/videocall/src/app/Component/VideoCall.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport AgoraRTC, {\r\n  LocalUser,\r\n  RemoteUser,\r\n  useJoin,\r\n  useLocalMicrophoneTrack,\r\n  useLocalCameraTrack,\r\n  usePublish,\r\n  useRemoteUsers,\r\n} from \"agora-rtc-react\";\r\n\r\nexport default function VideoCall() {\r\n  if (typeof window === \"undefined\") {\r\n    return null; // Prevents rendering on the server\r\n  }\r\n  const [appId, setAppId] = useState(\"4e4f366a04334ff19d2205abd577b0bb\");\r\n  const [channel, setChannel] = useState(\"test\");\r\n  const [token, setToken] = useState(null);\r\n  const [isCalling, setIsCalling] = useState(false);\r\n  const [micOn, setMicOn] = useState(true);\r\n  const [cameraOn, setCameraOn] = useState(true);\r\n\r\n  useJoin({ appid: appId, channel: channel, token: token || null }, isCalling);\r\n  const [localMicrophoneTrack, setLocalMicrophoneTrack] = useState(null);\r\n  const [localCameraTrack, setLocalCameraTrack] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\" && (micOn || cameraOn)) {\r\n      async function initTracks() {\r\n        try {\r\n          const stream = await navigator.mediaDevices.getUserMedia({\r\n            video: true,\r\n            audio: true,\r\n          });\r\n\r\n          const micTrack = await AgoraRTC.createMicrophoneAudioTrack();\r\n          const camTrack = await AgoraRTC.createCameraVideoTrack();\r\n\r\n          setLocalMicrophoneTrack(micTrack);\r\n          setLocalCameraTrack(camTrack);\r\n        } catch (error) {\r\n          console.error(\"Error accessing camera/microphone:\", error);\r\n        }\r\n      }\r\n      initTracks();\r\n    }\r\n\r\n    // if (micOn || cameraOn) {\r\n    // }\r\n  }, [micOn, cameraOn]);\r\n\r\n  usePublish([localMicrophoneTrack, localCameraTrack]);\r\n  const remoteUsers = useRemoteUsers();\r\n  if (remoteUsers.length > 0) {\r\n    console.log(remoteUsers, \"remoteUsers\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center h-screen bg-gray-900 text-white p-6\">\r\n      {isCalling ? (\r\n        <div className=\"w-full max-w-4xl flex flex-col items-center gap-4\">\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div className=\"w-64 h-64 bg-gray-700 flex items-center justify-center rounded-lg\">\r\n              <LocalUser\r\n                // audioTrack={localMicrophoneTrack}\r\n                videoTrack={localCameraTrack}\r\n                cameraOn={cameraOn}\r\n                micOn={micOn}\r\n              >\r\n                <span className=\"text-center\">You</span>\r\n              </LocalUser>\r\n            </div>\r\n            {remoteUsers.length > 0 ? (\r\n              remoteUsers.map((user) => (\r\n                <div\r\n                  key={user.uid}\r\n                  className=\"w-64 h-64 bg-gray-700 flex items-center justify-center rounded-lg\"\r\n                >\r\n                  <RemoteUser user={user} />\r\n                  <span className=\"text-center\">{user.uid}</span>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div className=\"w-64 h-64 bg-gray-700 flex items-center justify-center rounded-lg\">\r\n                Waiting for user...\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"flex gap-4 mt-6\">\r\n            <button\r\n              onClick={() => setMicOn(!micOn)}\r\n              className={`px-6 py-2 rounded-lg ${\r\n                micOn ? \"bg-green-500\" : \"bg-red-500\"\r\n              }`}\r\n            >\r\n              {micOn ? \"Mute Mic\" : \"Unmute Mic\"}\r\n            </button>\r\n            <button\r\n              onClick={() => setCameraOn(!cameraOn)}\r\n              className={`px-6 py-2 rounded-lg ${\r\n                cameraOn ? \"bg-green-500\" : \"bg-red-500\"\r\n              }`}\r\n            >\r\n              {cameraOn ? \"Turn Off Camera\" : \"Turn On Camera\"}\r\n            </button>\r\n            <button\r\n              onClick={() => setIsCalling(false)}\r\n              className=\"px-6 py-2 bg-red-600 rounded-lg\"\r\n            >\r\n              Leave Call\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"flex flex-col items-center gap-4\">\r\n          <h1 className=\"text-xl font-bold\">Join a Video Call</h1>\r\n          <input\r\n            type=\"text\"\r\n            value={appId}\r\n            onChange={(e) => setAppId(e.target.value)}\r\n            placeholder=\"Agora App ID\"\r\n            className=\"p-2 bg-gray-800 border border-gray-600 rounded-lg w-64\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={channel}\r\n            onChange={(e) => setChannel(e.target.value)}\r\n            placeholder=\"Channel Name\"\r\n            className=\"p-2 bg-gray-800 border border-gray-600 rounded-lg w-64\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={token || \"\"}\r\n            onChange={(e) => setToken(e.target.value)}\r\n            placeholder=\"Token (Optional)\"\r\n            className=\"p-2 bg-gray-800 border border-gray-600 rounded-lg w-64\"\r\n          />\r\n          <button\r\n            onClick={() => setIsCalling(true)}\r\n            className=\"px-6 py-2 bg-blue-600 rounded-lg\"\r\n          >\r\n            Join Call\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;;AAae,SAAS;IACtB,wCAAmC;QACjC,OAAO,MAAM,mCAAmC;IAClD;;IACA,MAAO,mBAAO;IACd,MAAO,qBAAS;IAChB,MAAO,mBAAO;IACd,MAAO,uBAAW;IAClB,MAAO,mBAAO;IACd,MAAO,sBAAU;IAGjB,MAAO,kCAAsB;IAC7B,MAAO,8BAAkB;IA4BzB,MAAM;AAgGR","debugId":null}}]
}